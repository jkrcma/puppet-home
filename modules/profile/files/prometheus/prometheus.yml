# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets: ['monitor.den:9093']

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - '/etc/prometheus/alerts/*.yml'

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ['localhost:9090']

  - job_name: 'node'
    static_configs:
      - targets: ['dogee.den:9100']
        labels:
          group: 'hardware'
          instance: 'dogee.den'
      - targets: ['drolf-rpi.den:9100']
        labels:
          group: 'hardware'
          instance: 'drolf-rpi.den'
      - targets: ['tigerfox.isgeek.info:9273']
        labels:
          group: 'virtual'
          instance: 'tigerfox.isgeek.info'
    # LXC containers
      - targets: ['dns.den:9100']
        labels:
          group: 'virtual'
          instance: 'dns.den'
      - targets: ['puppet.den:9100']
        labels:
          group: 'virtual'
          instance: 'puppet.den'
      - targets: ['nas.den:9100']
        labels:
          group: 'virtual'
          instance: 'nas.den'
      - targets: ['torrent.den:9100']
        labels:
          group: 'virtual'
          instance: 'torrent.den'
      - targets: ['monitor.den:9100']
        labels:
          group: 'virtual'
          instance: 'monitor.den'
      - targets: ['mediabox.den:9100']
        labels:
          group: 'virtual'
          instance: 'mediabox.den'
      - targets: ['kodi.den:9100']
        labels:
          group: 'virtual'
          instance: 'kodi.den'
      - targets: ['smtp.den:9100']
        labels:
          group: 'virtual'
          instance: 'smtp.den'
      - targets: ['pihole.den:9100']
        labels:
          group: 'virtual'
          instance: 'pihole.den'
      - targets: ['build.den:9100']
        labels:
          group: 'virtual'
          instance: 'build.den'

  - job_name: 'iot'
    static_configs:
      - targets: ['drolf-rpi4.den:9190']
        labels:
          group: 'hardware'
          instance: 'drolf-rpi4.den'

  - job_name: 'pihole'
    static_configs:
      - targets: ['pihole.den:9617']
        labels:
          group: 'virtual'
          instance: 'pihole.den'
    metric_relabel_configs:
      - regex: 'hostname'
        action: labeldrop

  # Blackbox monitoring

  - job_name: 'blackbox-ping'
    metrics_path: /probe
    params:
      module: [icmp]
    static_configs:
      - targets:
        - google.cz
        - google.com
        - heureka.cz
        - seznam.cz
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: 127.0.0.1:9115

  - job_name: 'snmp'
    metrics_path: /snmp
    params:
      module: [default]
    static_configs:
      - targets:
        # intentionally no DNS
        - 10.7.21.1 
        - 10.7.21.2
        - 10.7.21.3
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: 127.0.0.1:9116

  - job_name: 'apcupsd'
    static_configs:
      - targets: ['drolf-rpi.den:9162']
        labels:
          group: 'hardware'
          instance: 'drolf-rpi.den'
    metric_relabel_configs:
      - regex: '(hostname|model)'
        action: labeldrop

